{"version":3,"sources":["InputSection.js","LiInput.js","App.js","index.js"],"names":["InputSection","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","inputValue","inputChange","bind","assertThisInitialized","clearInputValue","keyCodeText","e","setState","target","value","keyCode","inputSetValue","_this2","react_default","a","createElement","autoFocus","className","placeholder","onKeyUp","onChange","Component","LiInput","enterChangeValue","onBlurInput","dbClick","changeDBClick","index","toString","classNameHandle","onBlur","App","id","inputSetValueArray","currentStatus","changeCompleted","arrayinputv","JSON","parse","stringify","idcopy","newclass","title","completed","push","deleteLi","filter","item","every","forEach","current","cLearcompleted","Active","length","arr","all","active","src_InputSection","type","onClick","checkAllLabel","map","key","checked","onDoubleClick","itemIDTest","src_LiInput","changeCurrentStatus","clearCompleted","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.f53a4944.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './App.css';\n\nclass InputSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            inputValue : '',\n        };\n        this.inputChange = this.inputChange.bind(this);\n        this.clearInputValue = this.clearInputValue.bind(this);\n        this.keyCodeText = this.keyCodeText.bind(this);\n    }\n\n    //input改变\n    inputChange(e) {\n        this.setState({ inputValue: e.target.value })\n    }\n\n    //监听enter并调用设置在父组件内\n    keyCodeText(e) {\n        if (e.keyCode === 13 && (this.state.inputValue !== '')) {\n            this.props.inputSetValue(this.state.inputValue);\n            this.clearInputValue();\n        }\n    }\n\n    clearInputValue() {\n        this.setState( {inputValue: ''} )\n    }\n\n    render() {\n        return(\n            <div>\n                <input\n                    autoFocus={true}\n                    className=\"input-change\"\n                    placeholder='what needs to be done?'\n                    value={this.state.inputValue}\n                    onKeyUp={(e) => this.keyCodeText(e)}\n                    onChange={(e) => this.inputChange(e)}\n                />\n            </div>\n        )\n    }\n}\n\nexport default InputSection;\n","import React, { Component } from'react';\nimport './App.css';\n\nclass LiInput extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n               inputValue: '',\n            };\n\n            this.enterChangeValue = this.enterChangeValue.bind(this);\n            this.onBlurInput = this.onBlurInput.bind(this);\n\n    }\n\n    // enter键改变样式\n    enterChangeValue(e) {\n        if (e.keyCode === 13 && this.props.dbClick) {\n           this.props.changeDBClick();\n        }\n    }\n\n    // 展示效果下如果失去焦点就改变\n    onBlurInput() {\n        if (this.props.dbClick) {\n            this.props.changeDBClick();\n        }\n    }\n\n    render() {\n        const className = this.props.dbClick && this.props.index.toString() === this.props.classNameHandle  ?  ' li-input-text-db-block' : '';\n        return(\n            <div>\n                <input\n                    autoFocus={(!!this.props.dbClick)}\n                    value={this.props.value}\n                    className={this.props.className + className}\n                    onChange={(e) => this.props.inputValue(e, this.props.index)}\n                    onKeyUp={(e) =>  this.enterChangeValue(e) }\n                    onBlur={() => this.onBlurInput()}\n                />\n            </div>\n        )\n    }\n\n}\n\nexport default  LiInput;","import React, { Component } from 'react';\nimport InputSection from './InputSection.js';\nimport LiInput from './LiInput.js';\nimport './App.css';\n\n\nclass App extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            id: 0,                       // 为每个数据设置一个不重复的ID\n            inputSetValueArray: [],      // 存取的数据包含ID completed title\n            dbClick: false,              // 是否在双击状态下\n            classNameHandle: 0,          // 取得被双击的li标签的ID\n            currentStatus: 'all',\n\n\n        };\n        this.inputSetValue = this.inputSetValue.bind(this);\n        this.inputValue = this.inputValue.bind(this);\n        this.changeDBClick = this.changeDBClick.bind(this);\n        this.changeCompleted = this.changeCompleted.bind(this);\n    }\n\n\n    // COPY state-> Array\n\n    //传入子组件调用而后修改父组件的state 得到每次输入的值\n    inputSetValue (inputValue) {\n        let arrayinputv = JSON.parse(JSON.stringify(this.state.inputSetValueArray));\n        let idcopy = this.state.id;\n        let newclass = {\n            id: idcopy,\n            title: inputValue,\n            completed: false,\n\n        };\n\n        arrayinputv.push(newclass);\n        this.setState({\n                inputSetValueArray: arrayinputv,\n                id: ++idcopy\n        });\n    }\n\n\n     inputValue(e, index) {\n         let arrayinputv = JSON.parse(JSON.stringify(this.state.inputSetValueArray));\n         if (e.target.value!=='') {\n             arrayinputv[index].title = e.target.value;\n             this.setState({ inputSetValueArray: arrayinputv })\n         } else {\n             this.deleteLi(e, index)\n         }\n     };\n\n    // 改变 dbclick值从而决定如何渲染样式\n    changeDBClick() {\n        let dbClick = this.state.dbClick;\n        this.setState({ dbClick: !dbClick });\n\n    }\n\n    // input点击修改completed\n    changeCompleted(index) {\n        let arrayinputv = JSON.parse(JSON.stringify(this.state.inputSetValueArray));\n        arrayinputv[index].completed = !arrayinputv[index].completed;\n        this.setState({ inputSetValueArray: arrayinputv });\n\n}\n\n    // 判断双击元素ID\n    itemIDTest(e) {\n        if (e) {\n           this.setState({ classNameHandle: e.target.id });\n        }\n    }\n\n    //button 删除自身\n    deleteLi(index) {\n        let arrayinputv = JSON.parse(JSON.stringify(this.state.inputSetValueArray));\n        const filter = arrayinputv.filter(item => item.id !== index);\n        this.setState({ inputSetValueArray: filter });\n    }\n\n    // 改变所有的completed状态\n    checkAllLabel() {\n        let arrayinputv = JSON.parse(JSON.stringify(this.state.inputSetValueArray));\n        if (arrayinputv.every(item => item.completed === true)) {\n           arrayinputv.forEach(item => item.completed = false)\n        } else arrayinputv.forEach(item => item.completed = true);\n        this.setState({ inputSetValueArray: arrayinputv });\n    }\n\n\n    // 点击 All Button\n    changeCurrentStatus(current) {\n        this.setState({ currentStatus: current });\n    }\n\n    clearCompleted() {\n        const arrayinputv = JSON.parse(JSON.stringify(this.state.inputSetValueArray));\n        const cLearcompleted = arrayinputv.filter(item => item.completed === false);\n        this.setState({ inputSetValueArray: cLearcompleted });\n    }\n\n    render() {\n        const arrayinputv = JSON.parse(JSON.stringify(this.state.inputSetValueArray));\n        const completed = arrayinputv.filter(item => item.completed === true);\n        const Active = arrayinputv.filter(item => item.completed === false);\n        const length = this.state.inputSetValueArray.length;\n        const arr = {\n            'all': arrayinputv,\n            'active': Active ,\n            'completed':completed,\n        };\n\n        return (\n            <div className=\"container\">\n                <header className=\"todo-header\"><h1>ToDoList</h1></header>\n                <section className=\"input-section\">\n                    <div className=\"input-wrap\">\n                        <InputSection  inputSetValue={this.inputSetValue}/>\n                        <input className=\"check-all-input\" type=\"checkBox\"/>\n                        <label className={length < 1 ? 'check-all-label li-input-text-db' : 'check-all-label'}\n                               onClick={() => this.checkAllLabel()}\n                        />\n                        <ul className=\"liStyle\">\n                            {arr[this.state.currentStatus].map(\n                                (item, index) => {\n                                    return(\n                                        <li key={item.id}>\n                                            <div className=\"view\">\n                                                <input\n                                                    checked={item.completed}\n                                                    onChange={() => this.changeCompleted(index)}\n                                                    className=\"li-input\"\n                                                    type=\"checkbox\"\n                                                />\n                                                <label\n                                                    className={this.state.dbClick && index.toString() === this.state.classNameHandle  ? 'label-change li-input-text-db' : 'label-change'}\n                                                    id={index}\n                                                    onDoubleClick={\n                                                    e => {\n                                                        this.changeDBClick(e);\n                                                        this.itemIDTest(e);\n                                                    }\n                                                }\n                                                >{item.title}</label>\n                                                <button\n                                                    className=\"destory\"\n                                                    onClick={() => this.deleteLi(item.id)}\n                                                />\n                                            </div>\n                                            <LiInput\n                                                value={item.title}\n                                                className=\"li-input-text\"\n                                                changeDBClick={this.changeDBClick}\n                                                classNameHandle={this.state.classNameHandle}\n                                                dbClick={this.state.dbClick}\n                                                index={index}\n                                                inputValue={this.inputValue}\n                                            />\n                                        </li>\n                                    )\n                                }\n                            )}\n                        </ul>\n                        <footer className={ length < 1? 'button-section li-input-text-db':'button-section' }>\n                            <span className=\"item-span\">\n                                {length}\n                                {length >1 ? ' items left' : ' item left'}\n                                </span>\n                            <ul className=\"click-button\">\n                                <li\n                                    onClick={() => this.changeCurrentStatus('all')}\n                                >All</li>\n                                <li\n                                    onClick={() => this.changeCurrentStatus('active')}\n                                >Active</li>\n                                <li\n                                    onClick={() => this.changeCurrentStatus('completed')}\n                                >Completed</li>\n                            </ul>\n                            <button\n                                className = \"clear-button\"\n                                onClick={() => this.clearCompleted()}\n                            >Clear Completed</button>\n                        </footer>\n                    </div>\n                </section>\n                <footer className=\"footer-im\"/>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}